/*
 * generated by Xtext 2.10.0
 */
grammar InternalKultoDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.kulto.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.kulto.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.kulto.services.KultoDslGrammarAccess;

}
@parser::members {
	private KultoDslGrammarAccess grammarAccess;

	public void setGrammarAccess(KultoDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleKultoModel
entryRuleKultoModel
:
{ before(grammarAccess.getKultoModelRule()); }
	 ruleKultoModel
{ after(grammarAccess.getKultoModelRule()); } 
	 EOF 
;

// Rule KultoModel
ruleKultoModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getKultoModelAccess().getElementsAssignment()); }
		(rule__KultoModel__ElementsAssignment)*
		{ after(grammarAccess.getKultoModelAccess().getElementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRootElement
entryRuleRootElement
:
{ before(grammarAccess.getRootElementRule()); }
	 ruleRootElement
{ after(grammarAccess.getRootElementRule()); } 
	 EOF 
;

// Rule RootElement
ruleRootElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRootElementAccess().getAlternatives()); }
		(rule__RootElement__Alternatives)
		{ after(grammarAccess.getRootElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard
:
{ before(grammarAccess.getQualifiedNameWithWildcardRule()); }
	 ruleQualifiedNameWithWildcard
{ after(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
		(rule__QualifiedNameWithWildcard__Group__0)
		{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport
entryRuleImport
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportAccess().getGroup()); }
		(rule__Import__Group__0)
		{ after(grammarAccess.getImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDomainType
entryRuleDomainType
:
{ before(grammarAccess.getDomainTypeRule()); }
	 ruleDomainType
{ after(grammarAccess.getDomainTypeRule()); } 
	 EOF 
;

// Rule DomainType
ruleDomainType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDomainTypeAccess().getAlternatives()); }
		(rule__DomainType__Alternatives)
		{ after(grammarAccess.getDomainTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimitive
entryRulePrimitive
:
{ before(grammarAccess.getPrimitiveRule()); }
	 rulePrimitive
{ after(grammarAccess.getPrimitiveRule()); } 
	 EOF 
;

// Rule Primitive
rulePrimitive 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimitiveAccess().getGroup()); }
		(rule__Primitive__Group__0)
		{ after(grammarAccess.getPrimitiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnnum
entryRuleEnnum
:
{ before(grammarAccess.getEnnumRule()); }
	 ruleEnnum
{ after(grammarAccess.getEnnumRule()); } 
	 EOF 
;

// Rule Ennum
ruleEnnum 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnnumAccess().getGroup()); }
		(rule__Ennum__Group__0)
		{ after(grammarAccess.getEnnumAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnnumLiteral
entryRuleEnnumLiteral
:
{ before(grammarAccess.getEnnumLiteralRule()); }
	 ruleEnnumLiteral
{ after(grammarAccess.getEnnumLiteralRule()); } 
	 EOF 
;

// Rule EnnumLiteral
ruleEnnumLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnnumLiteralAccess().getGroup()); }
		(rule__EnnumLiteral__Group__0)
		{ after(grammarAccess.getEnnumLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntity
entryRuleEntity
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityAccess().getGroup()); }
		(rule__Entity__Group__0)
		{ after(grammarAccess.getEntityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttribute
entryRuleAttribute
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeAccess().getGroup()); }
		(rule__Attribute__Group__0)
		{ after(grammarAccess.getAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDomainPackage
entryRuleDomainPackage
:
{ before(grammarAccess.getDomainPackageRule()); }
	 ruleDomainPackage
{ after(grammarAccess.getDomainPackageRule()); } 
	 EOF 
;

// Rule DomainPackage
ruleDomainPackage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDomainPackageAccess().getGroup()); }
		(rule__DomainPackage__Group__0)
		{ after(grammarAccess.getDomainPackageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDomain
entryRuleDomain
:
{ before(grammarAccess.getDomainRule()); }
	 ruleDomain
{ after(grammarAccess.getDomainRule()); } 
	 EOF 
;

// Rule Domain
ruleDomain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDomainAccess().getGroup()); }
		(rule__Domain__Group__0)
		{ after(grammarAccess.getDomainAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDomainChild
entryRuleDomainChild
:
{ before(grammarAccess.getDomainChildRule()); }
	 ruleDomainChild
{ after(grammarAccess.getDomainChildRule()); } 
	 EOF 
;

// Rule DomainChild
ruleDomainChild 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDomainChildAccess().getAlternatives()); }
		(rule__DomainChild__Alternatives)
		{ after(grammarAccess.getDomainChildAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleApplication
entryRuleApplication
:
{ before(grammarAccess.getApplicationRule()); }
	 ruleApplication
{ after(grammarAccess.getApplicationRule()); } 
	 EOF 
;

// Rule Application
ruleApplication 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getApplicationAccess().getGroup()); }
		(rule__Application__Group__0)
		{ after(grammarAccess.getApplicationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePopis
entryRulePopis
:
{ before(grammarAccess.getPopisRule()); }
	 rulePopis
{ after(grammarAccess.getPopisRule()); } 
	 EOF 
;

// Rule Popis
rulePopis 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPopisAccess().getGroup()); }
		(rule__Popis__Group__0)
		{ after(grammarAccess.getPopisAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RootElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRootElementAccess().getTypeParserRuleCall_0()); }
		ruleType
		{ after(grammarAccess.getRootElementAccess().getTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRootElementAccess().getDomainPackageParserRuleCall_1()); }
		ruleDomainPackage
		{ after(grammarAccess.getRootElementAccess().getDomainPackageParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getRootElementAccess().getDomainParserRuleCall_2()); }
		ruleDomain
		{ after(grammarAccess.getRootElementAccess().getDomainParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getRootElementAccess().getApplicationParserRuleCall_3()); }
		ruleApplication
		{ after(grammarAccess.getRootElementAccess().getApplicationParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getPrimitiveParserRuleCall_0()); }
		rulePrimitive
		{ after(grammarAccess.getTypeAccess().getPrimitiveParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getDomainTypeParserRuleCall_1()); }
		ruleDomainType
		{ after(grammarAccess.getTypeAccess().getDomainTypeParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainTypeAccess().getEnnumParserRuleCall_0()); }
		ruleEnnum
		{ after(grammarAccess.getDomainTypeAccess().getEnnumParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDomainTypeAccess().getEntityParserRuleCall_1()); }
		ruleEntity
		{ after(grammarAccess.getDomainTypeAccess().getEntityParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainChild__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainChildAccess().getDomainPackageParserRuleCall_0()); }
		ruleDomainPackage
		{ after(grammarAccess.getDomainChildAccess().getDomainPackageParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDomainChildAccess().getDomainTypeParserRuleCall_1()); }
		ruleDomainType
		{ after(grammarAccess.getDomainChildAccess().getDomainTypeParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildcard__Group__0__Impl
	rule__QualifiedNameWithWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
	{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildcard__Group__1__Impl
	rule__QualifiedNameWithWildcard__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildcard__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_2()); }
	'*'
	{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
	(rule__Import__ImportedNamespaceAssignment_1)
	{ after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primitive__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group__0__Impl
	rule__Primitive__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getPrimitiveKeyword_0()); }
	'primitive:'
	{ after(grammarAccess.getPrimitiveAccess().getPrimitiveKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group__1__Impl
	rule__Primitive__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getNameAssignment_1()); }
	(rule__Primitive__NameAssignment_1)
	{ after(grammarAccess.getPrimitiveAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group__2__Impl
	rule__Primitive__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getJavaKeyword_2()); }
	'java:'
	{ after(grammarAccess.getPrimitiveAccess().getJavaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getJavaTypeAssignment_3()); }
	(rule__Primitive__JavaTypeAssignment_3)
	{ after(grammarAccess.getPrimitiveAccess().getJavaTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ennum__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ennum__Group__0__Impl
	rule__Ennum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ennum__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnnumAccess().getEnumKeyword_0()); }
	'enum:'
	{ after(grammarAccess.getEnnumAccess().getEnumKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ennum__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ennum__Group__1__Impl
	rule__Ennum__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ennum__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnnumAccess().getNameAssignment_1()); }
	(rule__Ennum__NameAssignment_1)
	{ after(grammarAccess.getEnnumAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ennum__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ennum__Group__2__Impl
	rule__Ennum__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Ennum__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnnumAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getEnnumAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ennum__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ennum__Group__3__Impl
	rule__Ennum__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Ennum__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnnumAccess().getPopisAssignment_3()); }
	(rule__Ennum__PopisAssignment_3)?
	{ after(grammarAccess.getEnnumAccess().getPopisAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ennum__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ennum__Group__4__Impl
	rule__Ennum__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Ennum__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnnumAccess().getLiteralsAssignment_4()); }
	(rule__Ennum__LiteralsAssignment_4)*
	{ after(grammarAccess.getEnnumAccess().getLiteralsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ennum__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ennum__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ennum__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnnumAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getEnnumAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnnumLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnnumLiteral__Group__0__Impl
	rule__EnnumLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnnumLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnnumLiteralAccess().getNameAssignment_0()); }
	(rule__EnnumLiteral__NameAssignment_0)
	{ after(grammarAccess.getEnnumLiteralAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnnumLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnnumLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnnumLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnnumLiteralAccess().getPopisAssignment_1()); }
	(rule__EnnumLiteral__PopisAssignment_1)?
	{ after(grammarAccess.getEnnumLiteralAccess().getPopisAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__0__Impl
	rule__Entity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getEntityKeyword_0()); }
	'entity:'
	{ after(grammarAccess.getEntityAccess().getEntityKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__1__Impl
	rule__Entity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getNameAssignment_1()); }
	(rule__Entity__NameAssignment_1)
	{ after(grammarAccess.getEntityAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__2__Impl
	rule__Entity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getGroup_2()); }
	(rule__Entity__Group_2__0)?
	{ after(grammarAccess.getEntityAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__3__Impl
	rule__Entity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__4__Impl
	rule__Entity__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getPopisAssignment_4()); }
	(rule__Entity__PopisAssignment_4)?
	{ after(grammarAccess.getEntityAccess().getPopisAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__5__Impl
	rule__Entity__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getAttributesAssignment_5()); }
	(rule__Entity__AttributesAssignment_5)*
	{ after(grammarAccess.getEntityAccess().getAttributesAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_2__0__Impl
	rule__Entity__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getExtendsKeyword_2_0()); }
	'extends>'
	{ after(grammarAccess.getEntityAccess().getExtendsKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getSuperTypeAssignment_2_1()); }
	(rule__Entity__SuperTypeAssignment_2_1)
	{ after(grammarAccess.getEntityAccess().getSuperTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getAtrKeyword_0()); }
	'atr:'
	{ after(grammarAccess.getAttributeAccess().getAtrKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__1__Impl
	rule__Attribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getNameAssignment_1()); }
	(rule__Attribute__NameAssignment_1)
	{ after(grammarAccess.getAttributeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__2__Impl
	rule__Attribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getTypeAssignment_2()); }
	(rule__Attribute__TypeAssignment_2)
	{ after(grammarAccess.getAttributeAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__3__Impl
	rule__Attribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getManyAssignment_3()); }
	(rule__Attribute__ManyAssignment_3)?
	{ after(grammarAccess.getAttributeAccess().getManyAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getPopisAssignment_4()); }
	(rule__Attribute__PopisAssignment_4)?
	{ after(grammarAccess.getAttributeAccess().getPopisAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DomainPackage__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainPackage__Group__0__Impl
	rule__DomainPackage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainPackage__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainPackageAccess().getPackageKeyword_0()); }
	'package:'
	{ after(grammarAccess.getDomainPackageAccess().getPackageKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainPackage__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainPackage__Group__1__Impl
	rule__DomainPackage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainPackage__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainPackageAccess().getNameAssignment_1()); }
	(rule__DomainPackage__NameAssignment_1)
	{ after(grammarAccess.getDomainPackageAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainPackage__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainPackage__Group__2__Impl
	rule__DomainPackage__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainPackage__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainPackageAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getDomainPackageAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainPackage__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainPackage__Group__3__Impl
	rule__DomainPackage__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainPackage__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainPackageAccess().getImportsAssignment_3()); }
	(rule__DomainPackage__ImportsAssignment_3)*
	{ after(grammarAccess.getDomainPackageAccess().getImportsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainPackage__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainPackage__Group__4__Impl
	rule__DomainPackage__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainPackage__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainPackageAccess().getTypesAssignment_4()); }
	(rule__DomainPackage__TypesAssignment_4)*
	{ after(grammarAccess.getDomainPackageAccess().getTypesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainPackage__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainPackage__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainPackage__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainPackageAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getDomainPackageAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Domain__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domain__Group__0__Impl
	rule__Domain__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainAccess().getDomainKeyword_0()); }
	'domain:'
	{ after(grammarAccess.getDomainAccess().getDomainKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domain__Group__1__Impl
	rule__Domain__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainAccess().getNameAssignment_1()); }
	(rule__Domain__NameAssignment_1)
	{ after(grammarAccess.getDomainAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domain__Group__2__Impl
	rule__Domain__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getDomainAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domain__Group__3__Impl
	rule__Domain__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainAccess().getPopisAssignment_3()); }
	(rule__Domain__PopisAssignment_3)?
	{ after(grammarAccess.getDomainAccess().getPopisAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domain__Group__4__Impl
	rule__Domain__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainAccess().getChildrenAssignment_4()); }
	(rule__Domain__ChildrenAssignment_4)*
	{ after(grammarAccess.getDomainAccess().getChildrenAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Domain__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getDomainAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Application__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Application__Group__0__Impl
	rule__Application__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationAccess().getApplicationKeyword_0()); }
	'application:'
	{ after(grammarAccess.getApplicationAccess().getApplicationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Application__Group__1__Impl
	rule__Application__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationAccess().getNameAssignment_1()); }
	(rule__Application__NameAssignment_1)
	{ after(grammarAccess.getApplicationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Application__Group__2__Impl
	rule__Application__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getApplicationAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Application__Group__3__Impl
	rule__Application__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationAccess().getDomainsAssignment_3()); }
	(rule__Application__DomainsAssignment_3)
	{ after(grammarAccess.getApplicationAccess().getDomainsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Application__Group__4__Impl
	rule__Application__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationAccess().getGroup_4()); }
	(rule__Application__Group_4__0)*
	{ after(grammarAccess.getApplicationAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Application__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getApplicationAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Application__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Application__Group_4__0__Impl
	rule__Application__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getApplicationAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Application__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationAccess().getDomainsAssignment_4_1()); }
	(rule__Application__DomainsAssignment_4_1)
	{ after(grammarAccess.getApplicationAccess().getDomainsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Popis__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Popis__Group__0__Impl
	rule__Popis__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Popis__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPopisAccess().getPopisKeyword_0()); }
	'popis:'
	{ after(grammarAccess.getPopisAccess().getPopisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Popis__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Popis__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Popis__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPopisAccess().getTextAssignment_1()); }
	(rule__Popis__TextAssignment_1)
	{ after(grammarAccess.getPopisAccess().getTextAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__KultoModel__ElementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKultoModelAccess().getElementsRootElementParserRuleCall_0()); }
		ruleRootElement
		{ after(grammarAccess.getKultoModelAccess().getElementsRootElementParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportedNamespaceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
		ruleQualifiedNameWithWildcard
		{ after(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPrimitiveAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__JavaTypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveAccess().getJavaTypeSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getPrimitiveAccess().getJavaTypeSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ennum__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnnumAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEnnumAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ennum__PopisAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnnumAccess().getPopisPopisParserRuleCall_3_0()); }
		rulePopis
		{ after(grammarAccess.getEnnumAccess().getPopisPopisParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ennum__LiteralsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnnumAccess().getLiteralsEnnumLiteralParserRuleCall_4_0()); }
		ruleEnnumLiteral
		{ after(grammarAccess.getEnnumAccess().getLiteralsEnnumLiteralParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnnumLiteral__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnnumLiteralAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getEnnumLiteralAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnnumLiteral__PopisAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnnumLiteralAccess().getPopisPopisParserRuleCall_1_0()); }
		rulePopis
		{ after(grammarAccess.getEnnumLiteralAccess().getPopisPopisParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__SuperTypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getSuperTypeEntityCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getEntityAccess().getSuperTypeEntityQualifiedNameParserRuleCall_2_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getEntityAccess().getSuperTypeEntityQualifiedNameParserRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getEntityAccess().getSuperTypeEntityCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__PopisAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getPopisPopisParserRuleCall_4_0()); }
		rulePopis
		{ after(grammarAccess.getEntityAccess().getPopisPopisParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__AttributesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getAttributesAttributeParserRuleCall_5_0()); }
		ruleAttribute
		{ after(grammarAccess.getEntityAccess().getAttributesAttributeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getTypeTypeCrossReference_2_0()); }
		(
			{ before(grammarAccess.getAttributeAccess().getTypeTypeQualifiedNameParserRuleCall_2_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getAttributeAccess().getTypeTypeQualifiedNameParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getAttributeAccess().getTypeTypeCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__ManyAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getManyAsteriskKeyword_3_0()); }
		(
			{ before(grammarAccess.getAttributeAccess().getManyAsteriskKeyword_3_0()); }
			'*'
			{ after(grammarAccess.getAttributeAccess().getManyAsteriskKeyword_3_0()); }
		)
		{ after(grammarAccess.getAttributeAccess().getManyAsteriskKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__PopisAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getPopisPopisParserRuleCall_4_0()); }
		rulePopis
		{ after(grammarAccess.getAttributeAccess().getPopisPopisParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainPackage__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainPackageAccess().getNameQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getDomainPackageAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainPackage__ImportsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainPackageAccess().getImportsImportParserRuleCall_3_0()); }
		ruleImport
		{ after(grammarAccess.getDomainPackageAccess().getImportsImportParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainPackage__TypesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainPackageAccess().getTypesDomainTypeParserRuleCall_4_0()); }
		ruleDomainType
		{ after(grammarAccess.getDomainPackageAccess().getTypesDomainTypeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDomainAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__PopisAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainAccess().getPopisPopisParserRuleCall_3_0()); }
		rulePopis
		{ after(grammarAccess.getDomainAccess().getPopisPopisParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__ChildrenAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainAccess().getChildrenDomainChildParserRuleCall_4_0()); }
		ruleDomainChild
		{ after(grammarAccess.getDomainAccess().getChildrenDomainChildParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getApplicationAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getApplicationAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__DomainsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getApplicationAccess().getDomainsDomainCrossReference_3_0()); }
		(
			{ before(grammarAccess.getApplicationAccess().getDomainsDomainIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getApplicationAccess().getDomainsDomainIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getApplicationAccess().getDomainsDomainCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__DomainsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getApplicationAccess().getDomainsDomainCrossReference_4_1_0()); }
		(
			{ before(grammarAccess.getApplicationAccess().getDomainsDomainIDTerminalRuleCall_4_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getApplicationAccess().getDomainsDomainIDTerminalRuleCall_4_1_0_1()); }
		)
		{ after(grammarAccess.getApplicationAccess().getDomainsDomainCrossReference_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Popis__TextAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPopisAccess().getTextSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getPopisAccess().getTextSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
